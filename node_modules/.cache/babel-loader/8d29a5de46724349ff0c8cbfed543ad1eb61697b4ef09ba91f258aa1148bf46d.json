{"ast":null,"code":"import{GET_ALL_NOTICE}from\"../../apis/Apis\";import{setLoader,storeNotices}from\"../slices/NoticeSlice\";const getNotices=()=>{return async dispatch=>{try{dispatch(setLoader(true));const res=await GET_ALL_NOTICE();dispatch(storeNotices((res===null||res===void 0?void 0:res.data)||[]));}catch(error){console.error(\"Error fetching notices:\",error);}finally{dispatch(setLoader(false));}};};export default getNotices;","map":{"version":3,"names":["GET_ALL_NOTICE","setLoader","storeNotices","getNotices","dispatch","res","data","error","console"],"sources":["/Users/mac/Desktop/localse-admin-panel/src/src/redux/apicalls/getNotices.js"],"sourcesContent":["import { GET_ALL_NOTICE } from \"../../apis/Apis\";\nimport { setLoader, storeNotices } from \"../slices/NoticeSlice\";\n\nconst getNotices = () => {\n    return async (dispatch) => {\n        try {\n            dispatch(setLoader(true));\n            const res = await GET_ALL_NOTICE();\n            dispatch(storeNotices(res?.data || [])); \n        } catch (error) {\n            console.error(\"Error fetching notices:\", error);\n        } finally {\n            dispatch(setLoader(false));\n        }\n    };\n};\n\nexport default getNotices;\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,iBAAiB,CAChD,OAASC,SAAS,CAAEC,YAAY,KAAQ,uBAAuB,CAE/D,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,MAAO,MAAO,CAAAC,QAAQ,EAAK,CACvB,GAAI,CACAA,QAAQ,CAACH,SAAS,CAAC,IAAI,CAAC,CAAC,CACzB,KAAM,CAAAI,GAAG,CAAG,KAAM,CAAAL,cAAc,CAAC,CAAC,CAClCI,QAAQ,CAACF,YAAY,CAAC,CAAAG,GAAG,SAAHA,GAAG,iBAAHA,GAAG,CAAEC,IAAI,GAAI,EAAE,CAAC,CAAC,CAC3C,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACnD,CAAC,OAAS,CACNH,QAAQ,CAACH,SAAS,CAAC,KAAK,CAAC,CAAC,CAC9B,CACJ,CAAC,CACL,CAAC,CAED,cAAe,CAAAE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}