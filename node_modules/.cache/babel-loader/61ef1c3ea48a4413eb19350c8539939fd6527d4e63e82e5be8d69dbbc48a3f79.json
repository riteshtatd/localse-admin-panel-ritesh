{"ast":null,"code":"import { API_BASE_URL } from \"../constant/path\";\nimport store from \"../redux/store\";\nimport { setUserAuthStates } from \"../redux/slices/userAuthSlice\";\nimport axios from \"axios\";\n\n// Axios axiosClient configure\nconst axiosClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptors\naxiosClient.interceptors.request.use(async config => {\n  const token = store.getState().userAuth.jwt;\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptors\naxiosClient.interceptors.response.use(response => response, async error => {\n  var _error$response, _error$response2, _error$response3, _error$response3$data;\n  const originalRequest = error.config;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) == 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) == 400 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) === \"Token has expired\" && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const refreshToken = store.getState().userAuth.refreshToken;\n    if (refreshToken) {\n      try {\n        // const res = await axios.post(\n        //   \"https://www.tatd.in/app-api/driver/login/refresh_token.php\",\n        //   { refresh_token: refreshToken }\n        // );\n\n        // if (res.data?.jwt) {\n        //   store.dispatch(\n        //     setUserAuthStates({\n        //       key: \"jwt\",\n        //       value: res.data.jwt,\n        //     })\n        //   );\n\n        //   // add new jwt in header\n        //   axiosClient.defaults.headers.common[\n        //     \"Authorization\"\n        //   ] = `Bearer ${res.data.jwt}`;\n        //   originalRequest.headers[\"Authorization\"] = `Bearer ${res.data.jwt}`;\n        //   return axiosClient(originalRequest);\n        // } else {\n        //   store.dispatch(\n        //     setUserAuthStates({\n        //       key: \"jwt\",\n        //       value: null,\n        //     })\n        //   );\n        //   store.dispatch(\n        //     setUserAuthStates({\n        //       key: \"login\",\n        //       value: false,\n        //     })\n        //   );\n        // }\n      } catch (refreshError) {\n        // store.dispatch(\n        //   setUserAuthStates({\n        //     key: \"jwt\",\n        //     value: null,\n        //   })\n        // );\n        // store.dispatch(\n        //   setUserAuthStates({\n        //     key: \"login\",\n        //     value: false,\n        //   })\n        // );\n\n        return Promise.reject(refreshError);\n      }\n    } else {\n      store.dispatch(setUserAuthStates({\n        key: \"jwt\",\n        value: null\n      }));\n      store.dispatch(setUserAuthStates({\n        key: \"login\",\n        value: false\n      }));\n    }\n  }\n  return Promise.reject(error);\n});\nconst _Fetch = (method, path, body, headers = {}) => {\n  return new Promise((resolve, reject) => {\n    // Merge headers: If headers are passed, merge with default headers\n    const finalHeaders = {\n      ...axiosClient.defaults.headers.common,\n      ...headers // Custom headers override default headers if any conflict\n    };\n    axiosClient({\n      method,\n      url: path,\n      data: method !== \"GET\" ? body : undefined,\n      params: method === \"GET\" ? body : undefined,\n      headers: finalHeaders // Pass merged headers\n    }).then(response => {\n      // console.log(`Response data: ${path}`, response.data);\n      if (response.data.status_code == 200) {\n        resolve(response.data);\n      } else {\n        reject(response.data.message);\n      }\n    }).catch(err => {\n      console.log(`Request error: ${path}`, err);\n      reject(err.response ? err.response.data : err.message);\n    });\n  });\n};\nexport default _Fetch;","map":{"version":3,"names":["API_BASE_URL","store","setUserAuthStates","axios","axiosClient","create","baseURL","headers","Accept","interceptors","request","use","config","token","getState","userAuth","jwt","error","Promise","reject","response","_error$response","_error$response2","_error$response3","_error$response3$data","originalRequest","status","data","message","_retry","refreshToken","refreshError","dispatch","key","value","_Fetch","method","path","body","resolve","finalHeaders","defaults","common","url","undefined","params","then","status_code","catch","err","console","log"],"sources":["/Users/mac/Desktop/localse-admin-panel/src/src/apis/Service.js"],"sourcesContent":["import { API_BASE_URL } from \"../constant/path\";\nimport store from \"../redux/store\";\nimport { setUserAuthStates } from \"../redux/slices/userAuthSlice\";\nimport axios from \"axios\";\n\n// Axios axiosClient configure\nconst axiosClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Request interceptors\naxiosClient.interceptors.request.use(\n  async (config) => {\n    const token = store.getState().userAuth.jwt;\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptors\naxiosClient.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (\n      error.response?.status == 401 ||\n      error.response?.status == 400 ||\n      (error.response?.data?.message === \"Token has expired\" &&\n        !originalRequest._retry)\n    ) {\n      originalRequest._retry = true;\n\n      const refreshToken = store.getState().userAuth.refreshToken;\n\n      if (refreshToken) {\n        try {\n          // const res = await axios.post(\n          //   \"https://www.tatd.in/app-api/driver/login/refresh_token.php\",\n          //   { refresh_token: refreshToken }\n          // );\n\n          // if (res.data?.jwt) {\n          //   store.dispatch(\n          //     setUserAuthStates({\n          //       key: \"jwt\",\n          //       value: res.data.jwt,\n          //     })\n          //   );\n\n          //   // add new jwt in header\n          //   axiosClient.defaults.headers.common[\n          //     \"Authorization\"\n          //   ] = `Bearer ${res.data.jwt}`;\n          //   originalRequest.headers[\"Authorization\"] = `Bearer ${res.data.jwt}`;\n          //   return axiosClient(originalRequest);\n          // } else {\n          //   store.dispatch(\n          //     setUserAuthStates({\n          //       key: \"jwt\",\n          //       value: null,\n          //     })\n          //   );\n          //   store.dispatch(\n          //     setUserAuthStates({\n          //       key: \"login\",\n          //       value: false,\n          //     })\n          //   );\n          // }\n        } catch (refreshError) {\n          // store.dispatch(\n          //   setUserAuthStates({\n          //     key: \"jwt\",\n          //     value: null,\n          //   })\n          // );\n          // store.dispatch(\n          //   setUserAuthStates({\n          //     key: \"login\",\n          //     value: false,\n          //   })\n          // );\n\n          return Promise.reject(refreshError);\n        }\n      } else {\n        store.dispatch(\n          setUserAuthStates({\n            key: \"jwt\",\n            value: null,\n          })\n        );\n        store.dispatch(\n          setUserAuthStates({\n            key: \"login\",\n            value: false,\n          })\n        );\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nconst _Fetch = (method, path, body, headers = {}) => {\n  return new Promise((resolve, reject) => {\n    // Merge headers: If headers are passed, merge with default headers\n    const finalHeaders = {\n      ...axiosClient.defaults.headers.common,\n      ...headers, // Custom headers override default headers if any conflict\n    };\n\n    axiosClient({\n      method,\n      url: path,\n      data: method !== \"GET\" ? body : undefined,\n      params: method === \"GET\" ? body : undefined,\n      headers: finalHeaders, // Pass merged headers\n    })\n      .then((response) => {\n        // console.log(`Response data: ${path}`, response.data);\n        if (response.data.status_code == 200) {\n          resolve(response.data);\n        } else {\n          reject(response.data.message);\n        }\n      })\n      .catch((err) => {\n        console.log(`Request error: ${path}`, err);\n        reject(err.response ? err.response.data : err.message);\n      });\n  });\n};\n\nexport default _Fetch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}